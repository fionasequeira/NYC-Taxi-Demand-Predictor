{"paragraphs":[{"text":"%pyspark\nfrom pyspark.sql import SQLContext\ndf = sqlContext.read.load('/shared/s/Updated_Data.csv', \n                          format='com.databricks.spark.csv', \n                          header='true', \n                          inferSchema='true')","user":"anonymous","dateUpdated":"2017-12-20T03:27:17+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1513738970401_1003329881","id":"20171220-030250_289147581","dateCreated":"2017-12-20T03:02:50+0000","dateStarted":"2017-12-20T03:27:17+0000","dateFinished":"2017-12-20T03:27:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:316"},{"text":"%pyspark\ndf.dropna()","user":"anonymous","dateUpdated":"2017-12-20T03:50:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_c0: int, datetime_local: timestamp, short_title: string, popularity: double, score: double, Venue_id: int, latitude: double, longitude: double, Venue_name: string, average_price: double, highest_price: int, listing_count: int, lowest_price: int, lowest_price_good_deals: int, type: string, type2: int, TaxiCount: int, LocationID: int, Month: int, DayofMonth: int, Hour: int, Temp_Avg: double, Conditions: string, Conditions2: int, timestamp: string, weekday: int]\n"}]},"apps":[],"jobName":"paragraph_1513741787800_1585350619","id":"20171220-034947_361750305","dateCreated":"2017-12-20T03:49:47+0000","dateStarted":"2017-12-20T03:50:41+0000","dateFinished":"2017-12-20T03:50:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:317"},{"text":"%pyspark\ndf = df.drop(df[0])\ndf.show(5)","user":"anonymous","dateUpdated":"2017-12-20T03:57:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+----------+--------+--------+--------+---------+-----------------+-------------+-------------+-------------+------------+-----------------------+--------------------+-----+---------+----------+-----+----------+----+--------+-------------+-----------+--------------+-------+\n|      datetime_local|         short_title|popularity|   score|Venue_id|latitude|longitude|       Venue_name|average_price|highest_price|listing_count|lowest_price|lowest_price_good_deals|                type|type2|TaxiCount|LocationID|Month|DayofMonth|Hour|Temp_Avg|   Conditions|Conditions2|     timestamp|weekday|\n+--------------------+--------------------+----------+--------+--------+--------+---------+-----------------+-------------+-------------+-------------+------------+-----------------------+--------------------+-----+---------+----------+-----+----------+----+--------+-------------+-----------+--------------+-------+\n|2017-07-05 14:00:...|Dear Evan Hansen ...|       0.0|0.604179|    3298| 40.6971| -73.9796|Music Box Theatre|        759.0|         1126|           12|         476|                      0|broadway_tickets_...|    1|       33|        65|    7|         5|  14|    82.4|Mostly Cloudy|          4|7/5/2017 14:00|      2|\n|2017-07-05 14:00:...|Hello, Dolly! - N...|  0.692593|0.588942|    3187| 40.6971| -73.9796|  Shubert Theatre|       1007.0|         1884|           35|         410|                    410|broadway_tickets_...|    1|       33|        65|    7|         5|  14|    82.4|Mostly Cloudy|          4|7/5/2017 14:00|      2|\n|2017-07-05 20:00:...|Hello, Dolly! - N...|  0.660295|0.647096|    3187| 40.6971| -73.9796|  Shubert Theatre|        972.5|         1884|           50|         125|                    125|broadway_tickets_...|    1|       27|        65|    7|         5|  20|    73.4|        Clear|          0|7/5/2017 20:00|      2|\n|2017-07-05 20:00:...|Dear Evan Hansen ...|       0.0|0.601474|    3298| 40.6971| -73.9796|Music Box Theatre|        668.0|          825|           42|         396|                      0|broadway_tickets_...|    1|       27|        65|    7|         5|  20|    73.4|        Clear|          0|7/5/2017 20:00|      2|\n|2017-07-05 23:00:...|Beatbreaker - New...|       0.0|0.452016|   41977| 40.7028| -73.9903| Marquee New York|          0.0|            0|            0|           0|                      0|             theater|    3|       18|        66|    7|         5|  23|    73.4|Partly Cloudy|          5|7/5/2017 23:00|      2|\n+--------------------+--------------------+----------+--------+--------+--------+---------+-----------------+-------------+-------------+-------------+------------+-----------------------+--------------------+-----+---------+----------+-----+----------+----+--------+-------------+-----------+--------------+-------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1513741850514_1171638282","id":"20171220-035050_1854267981","dateCreated":"2017-12-20T03:50:50+0000","dateStarted":"2017-12-20T03:57:30+0000","dateFinished":"2017-12-20T03:57:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:318"},{"text":"%pyspark\nX = df.select((df[2]*100).cast('integer').alias('popularity'), (df[3]*100).cast('integer').alias('score'), df[4], df[8],df[9],df[10], df[11], df[12], df[14], df[16],df[17],df[18],df[19],df[20],df[22],df[24])\nY = df.select(df[15])","user":"anonymous","dateUpdated":"2017-12-20T04:03:00+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1513742151838_-537808183","id":"20171220-035551_1706399206","dateCreated":"2017-12-20T03:55:51+0000","dateStarted":"2017-12-20T04:03:00+0000","dateFinished":"2017-12-20T04:03:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:319"},{"text":"%pyspark\nX.show(5)","user":"anonymous","dateUpdated":"2017-12-20T04:03:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+-----+--------+-------------+-------------+-------------+------------+-----------------------+-----+----------+-----+----------+----+--------+-----------+-------+\n|popularity|score|Venue_id|average_price|highest_price|listing_count|lowest_price|lowest_price_good_deals|type2|LocationID|Month|DayofMonth|Hour|Temp_Avg|Conditions2|weekday|\n+----------+-----+--------+-------------+-------------+-------------+------------+-----------------------+-----+----------+-----+----------+----+--------+-----------+-------+\n|         0|   60|    3298|        759.0|         1126|           12|         476|                      0|    1|        65|    7|         5|  14|    82.4|          4|      2|\n|        69|   58|    3187|       1007.0|         1884|           35|         410|                    410|    1|        65|    7|         5|  14|    82.4|          4|      2|\n|        66|   64|    3187|        972.5|         1884|           50|         125|                    125|    1|        65|    7|         5|  20|    73.4|          0|      2|\n|         0|   60|    3298|        668.0|          825|           42|         396|                      0|    1|        65|    7|         5|  20|    73.4|          0|      2|\n|         0|   45|   41977|          0.0|            0|            0|           0|                      0|    3|        66|    7|         5|  23|    73.4|          5|      2|\n+----------+-----+--------+-------------+-------------+-------------+------------+-----------------------+-----+----------+-----+----------+----+--------+-----------+-------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1513742529661_-1085738233","id":"20171220-040209_112170881","dateCreated":"2017-12-20T04:02:09+0000","dateStarted":"2017-12-20T04:03:46+0000","dateFinished":"2017-12-20T04:03:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:320"},{"text":"%pyspark\nfrom pyspark.mllib.classification import LogisticRegressionWithLBFGS, LogisticRegressionModel\nX_train, X_test = X.randomSplit([0.9, 0.1], seed=12345)\nY_train, Y_test = Y.randomSplit([0.9, 0.1], seed=12345)","user":"anonymous","dateUpdated":"2017-12-20T04:07:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1513739039815_-1661025080","id":"20171220-030359_1730388515","dateCreated":"2017-12-20T03:03:59+0000","dateStarted":"2017-12-20T04:07:51+0000","dateFinished":"2017-12-20T04:07:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:321"},{"text":"%pyspark\nX_train.show(5)","user":"anonymous","dateUpdated":"2017-12-20T04:08:21+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+-----+--------+-------------+-------------+-------------+------------+-----------------------+-----+----------+-----+----------+----+--------+-----------+-------+\n|popularity|score|Venue_id|average_price|highest_price|listing_count|lowest_price|lowest_price_good_deals|type2|LocationID|Month|DayofMonth|Hour|Temp_Avg|Conditions2|weekday|\n+----------+-----+--------+-------------+-------------+-------------+------------+-----------------------+-----+----------+-----+----------+----+--------+-----------+-------+\n|         0| null|    1410|        380.0|          579|           16|         260|                    260|    2|       243|    9|        14|  19|    77.0|          4|      3|\n|         0| null|    1410|        380.0|          579|           16|         260|                    260|    2|       243|    9|        14|  19|    77.0|          4|      3|\n|         0| null|    1410|        380.0|          579|           18|         260|                    260|    2|       243|    9|        16|  19|    73.4|          0|      5|\n|         0| null|    1410|        380.0|          579|           18|         260|                    260|    2|       243|    9|        16|  19|    73.4|          0|      5|\n|         0|    0|    6672|          0.0|            0|            0|           0|                      0|    2|       100|    7|        19|  20|    88.0|          0|      2|\n+----------+-----+--------+-------------+-------------+-------------+------------+-----------------------+-----+----------+-----+----------+----+--------+-----------+-------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1513741585599_-1754744883","id":"20171220-034625_1097052142","dateCreated":"2017-12-20T03:46:25+0000","dateStarted":"2017-12-20T04:08:21+0000","dateFinished":"2017-12-20T04:08:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:322"},{"text":"%pyspark\nY_train.show(5)","user":"anonymous","dateUpdated":"2017-12-20T04:08:52+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+\n|TaxiCount|\n+---------+\n|        1|\n|        1|\n|        1|\n|        1|\n|        1|\n+---------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1513742894791_-823955740","id":"20171220-040814_696941428","dateCreated":"2017-12-20T04:08:14+0000","dateStarted":"2017-12-20T04:08:53+0000","dateFinished":"2017-12-20T04:08:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:323"},{"text":"%pyspark\nfrom pyspark.mllib.tree import RandomForest, RandomForestModel\nfrom pyspark.mllib.util import MLUtils\nRFC = RandomForest.trainClassifier(X_train, numClasses=2, categoricalFeaturesInfo={},\n                                     numTrees=3, featureSubsetStrategy=\"auto\",\n                                     impurity='gini', maxDepth=4, maxBins=32)","user":"anonymous","dateUpdated":"2017-12-20T17:02:04+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1513742932996_1023806048","id":"20171220-040852_1516039650","dateCreated":"2017-12-20T04:08:52+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:324","dateFinished":"2017-12-20T17:02:04+0000","dateStarted":"2017-12-20T17:02:04+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-4379272550399887047.py\", line 367, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-4379272550399887047.py\", line 360, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 5, in <module>\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/mllib/tree.py\", line 406, in trainClassifier\n    maxDepth, maxBins, seed)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/mllib/tree.py\", line 306, in _train\n    assert isinstance(first, LabeledPoint), \"the data should be RDD of LabeledPoint\"\nAssertionError: the data should be RDD of LabeledPoint\n\n"}]}},{"text":"%pyspark\nrfc_pred = RFC.predict(X_test.map(lambda x: x.features))\nlabelsAndPredictions = testData.map(lambda lp: lp.label).zip(predictions)\ntestMSE = labelsAndPredictions.map(lambda lp: (lp[0] - lp[1]) * (lp[0] - lp[1])).sum() /\\\n    float(X_test.count())\nprint('Test Mean Squared Error = ' + str(testMSE))\nprint('Learned regression GBT model:')\nprint(model.toDebugString())","user":"anonymous","dateUpdated":"2017-12-20T17:05:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1513789291351_-1421667148","id":"20171220-170131_25428466","dateCreated":"2017-12-20T17:01:31+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:908","dateFinished":"2017-12-20T17:05:52+0000","dateStarted":"2017-12-20T17:05:51+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-4379272550399887047.py\", line 367, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-4379272550399887047.py\", line 355, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'RFC' is not defined\n\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-12-20T17:05:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1513789551827_342192544","id":"20171220-170551_1595592854","dateCreated":"2017-12-20T17:05:51+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1028"}],"name":"Taxi_Demand_Predictor","id":"2D32YU2UB","angularObjects":{"2D2XVSNRG:shared_process":[],"2D23P7GG5:shared_process":[],"2D3E6NQKM:shared_process":[],"2D2HY5WSY:shared_process":[],"2D464DPQZ:shared_process":[],"2D34YM67S:shared_process":[],"2D2MGZMZC:shared_process":[],"2D2R1D3AH:shared_process":[],"2D2AMG23R:shared_process":[],"2D1X491MJ:shared_process":[],"2D3UVGXNS:shared_process":[],"2D2Y94KRX:shared_process":[],"2D19HXF8A:shared_process":[],"2CZQU7E9P:shared_process":[],"2D43HSR9H:shared_process":[],"2D3J85QYN:shared_process":[],"2D182C7TE:shared_process":[],"2D188KUM5:shared_process":[],"2D3M8BC3P:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}